// main.cpp
#include <iostream>
#include <sqlite3.h>

int createDatabase() {
    sqlite3 *db;
    int exit = 0;

    exit = sqlite3_open("users.db", &db);

    std::string sql = "CREATE TABLE IF NOT EXISTS USERS("
                      "ID INTEGER PRIMARY KEY AUTOINCREMENT, "
                      "USERNAME TEXT NOT NULL, "
                      "PASSWORD TEXT NOT NULL);";

    char* errorMessage;
    exit = sqlite3_exec(db, sql.c_str(), NULL, 0, &errorMessage);

    if (exit != SQLITE_OK) {
        std::cerr << "Error Create Table: " << errorMessage << std::endl;
        sqlite3_free(errorMessage);
    } else {
        std::cout << "Table created successfully\n";
    }

    // Insert dummy user
    std::string insert_sql = "INSERT INTO USERS (USERNAME, PASSWORD) "
                             "SELECT 'admin', '1234' "
                             "WHERE NOT EXISTS (SELECT 1 FROM USERS WHERE USERNAME='admin');";

    exit = sqlite3_exec(db, insert_sql.c_str(), NULL, 0, &errorMessage);
    if (exit != SQLITE_OK) {
        std::cerr << "Insert error: " << errorMessage << std::endl;
        sqlite3_free(errorMessage);
    } else {
        std::cout << "Dummy user added\n";
    }

    sqlite3_close(db);
    return 0;
}

bool checkLogin(const std::string& username, const std::string& password) {
    sqlite3* db;
    sqlite3_stmt* stmt;
    bool success = false;

    int rc = sqlite3_open("users.db", &db);
    if (rc != SQLITE_OK) {
        std::cerr << "Can't open DB\n";
        return false;
    }

    std::string sql = "SELECT * FROM USERS WHERE USERNAME=? AND PASSWORD=?";
    rc = sqlite3_prepare_v2(db, sql.c_str(), -1, &stmt, 0);

    if (rc == SQLITE_OK) {
        sqlite3_bind_text(stmt, 1, username.c_str(), -1, SQLITE_STATIC);
        sqlite3_bind_text(stmt, 2, password.c_str(), -1, SQLITE_STATIC);
    }

    if (sqlite3_step(stmt) == SQLITE_ROW) {
        success = true;
    }

    sqlite3_finalize(stmt);
    sqlite3_close(db);
    return success;
}

int main() {
    createDatabase();

    std::string user, pass;
    std::cout << "Username: ";
    std::cin >> user;
    std::cout << "Password: ";
    std::cin >> pass;

    if (checkLogin(user, pass)) {
        std::cout << "Login berhasil!\n";
    } else {
        std::cout << "Login gagal. Username atau password salah.\n";
    }

    return 0;
}
